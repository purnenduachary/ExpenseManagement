package com.java.ejb.jsf;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.naming.NamingException;

import com.java.ejb.bean.RemoteStatelessHelper;
import com.java.ejb.bean.UserBeanRemote;
import com.java.ejb.model.User;

public class UserEjbImpl {

	static UserBeanRemote remote;

	static {

		try {
			remote = RemoteStatelessHelper.lookupRemoteStatelessUser();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public List<User> showUsersEjb() throws NamingException, ClassNotFoundException, SQLException {
		return remote.showUsers();
	}

	public String searchUserEjb(int id) throws ClassNotFoundException, SQLException {
		Map<String, Object> sessionMap = FacesContext.getCurrentInstance().getExternalContext().getSessionMap();

		User userFound = remote.searchUser(id);
		sessionMap.put("userFound", userFound);

		return "updateUser?faces-redirect=true";
	}

	public String addUserEjbValid(User user) throws ClassNotFoundException, SQLException {
	    boolean isValid = true;
	    FacesContext context = FacesContext.getCurrentInstance();

	    // Validate name: 3 to 30 alphabetic characters (can include space)
	    String nameRegex = "^[A-Za-z ]{3,30}$";
	    if (user.getName() == null || !user.getName().matches(nameRegex)) {
	        context.addMessage("name", new FacesMessage(FacesMessage.SEVERITY_ERROR,
	                "Invalid Name", "Name must be 3â€“30 letters and may include spaces"));
	        context.validationFailed();
	        isValid = false;
	    }

	    // Validate email: standard email regex
	    String emailRegex = "^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,6}$";
	    if (user.getEmail() == null || !user.getEmail().matches(emailRegex)) {
	        context.addMessage("email", new FacesMessage(FacesMessage.SEVERITY_ERROR,
	                "Invalid Email", "Please enter a valid email address"));
	        context.validationFailed();
	        isValid = false;
	    }

	    if (!isValid) {
	        return null; // Stay on the same page if validation fails
	    }

	    remote.addUser(user); // Save to DB if valid
	    return "ShowUser?faces-redirect=true"; // Redirect to listing page
	}


}
