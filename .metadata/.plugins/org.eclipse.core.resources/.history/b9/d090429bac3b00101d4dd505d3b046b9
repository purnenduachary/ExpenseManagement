package com.java.ejb.daoImpl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

import com.java.ejb.model.User;

public class UserDaoImpl implements UserDao {

    private static final String URL = "jdbc:mysql://localhost:3306/ejb_project";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "root";

    static {
        Class.forName("com.mysql.cj.jdbc.Driver");
    }

    public Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USERNAME, PASSWORD);
    }

    @Override
    public int addUser(User user) throws SQLException {
        Connection con = getConnection();
        String sql = "INSERT INTO users (name, email, created_at) VALUES (?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, user.getName());
        ps.setString(2, user.getEmail());
        ps.setDate(3, user.getCreatedAt());
        int rows = ps.executeUpdate();

        if (rows > 0) {
            ResultSet rs = ps.getGeneratedKeys();
            if (rs.next()) {
                return rs.getInt(1); // Return generated user ID
            }
        }
        return 0;
    }

    @Override
    public User getUserById(int id) throws SQLException {
        Connection con = getConnection();
        String sql = "SELECT * FROM users WHERE id = ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, id);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            return new User(
                rs.getInt("id"),
                rs.getString("name"),
                rs.getString("email"),
                rs.getDate("created_at")
            );
        }
        return null;
    }

    @Override
    public List<User> getAllUsers() throws SQLException {
        Connection con = getConnection();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM users");

        List<User> users = new ArrayList<>();
        while (rs.next()) {
            users.add(new User(
                rs.getInt("id"),
                rs.getString("name"),
                rs.getString("email"),
                rs.getDate("created_at")
            ));
        }
        return users;
    }
}
