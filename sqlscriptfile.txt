create database expenseinfinite

use  expenseinfinite
-- Drop tables if they exist
DROP TABLE IF EXISTS expense_splits;
DROP TABLE IF EXISTS expenses;
DROP TABLE IF EXISTS group_members;
DROP TABLE IF EXISTS groupses;
DROP TABLE IF EXISTS users;

-- Users Table
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Groups Table
CREATE TABLE groupses (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Group Members (Many-to-Many: users <-> groups)
CREATE TABLE group_members (
    id INT AUTO_INCREMENT PRIMARY KEY,
    group_id INT NOT NULL,
    user_id INT NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (group_id) REFERENCES groupses(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Expenses Table
CREATE TABLE expenses (
    id INT AUTO_INCREMENT PRIMARY KEY,
    group_id INT NOT NULL,
    paid_by_user_id INT NOT NULL,
    description VARCHAR(255) NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    expense_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (group_id) REFERENCES groupses(id),
    FOREIGN KEY (paid_by_user_id) REFERENCES users(id)
);

-- Expense Splits Table
CREATE TABLE expense_splits (
    id INT AUTO_INCREMENT PRIMARY KEY,
    expense_id INT NOT NULL,
    user_id INT NOT NULL,
    amount_owed DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (expense_id) REFERENCES expenses(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO users (name, email) VALUES
('Alice', 'alice@example.com'),
('Bob', 'bob@example.com'),
('Charlie', 'charlie@example.com'),
('Diana', 'diana@example.com'),
('Eve', 'eve@example.com'),
('Frank', 'frank@example.com'),
('Grace', 'grace@example.com'),
('Heidi', 'heidi@example.com'),
('Ivan', 'ivan@example.com'),
('Judy', 'judy@example.com');


INSERT INTO groupses (name) VALUES
('Trip to Goa'),
('Office Lunch'),
('College Friends'),
('Startup Team'),
('Family Vacation'),
('Roommates'),
('Wedding Budget'),
('Project X'),
('Flatmates'),
('Business Partners');


INSERT INTO group_members (group_id, user_id) VALUES
(1, 1), (1, 2),
(2, 3), (2, 4),
(3, 5), (3, 6),
(4, 7), (4, 8),
(5, 9), (5, 10);


INSERT INTO expenses (group_id, paid_by_user_id, description, total_amount, expense_date) VALUES
(1, 1, 'Train Tickets', 1200.00, '2024-01-10'),
(2, 3, 'Lunch Bill', 800.00, '2024-02-15'),
(3, 5, 'Snacks and Drinks', 500.00, '2024-03-05'),
(4, 7, 'Team Dinner', 1500.00, '2024-04-22'),
(5, 9, 'Hotel Stay', 3000.00, '2024-05-12'),
(6, 2, 'Cleaning Service', 600.00, '2024-05-01'),
(7, 4, 'Wedding Gifts', 2500.00, '2024-05-15'),
(8, 6, 'Project Hosting', 900.00, '2024-05-20'),
(9, 8, 'Electricity Bill', 1100.00, '2024-05-10'),
(10, 10, 'Dinner Out', 850.00, '2024-05-21');



INSERT INTO expense_splits (expense_id, user_id, amount_owed) VALUES
(1, 1, 600.00), (1, 2, 600.00),
(2, 3, 400.00), (2, 4, 400.00),
(3, 5, 250.00), (3, 6, 250.00),
(4, 7, 750.00), (4, 8, 750.00),
(5, 9, 1500.00), (5, 10, 1500.00),
(6, 1, 300.00), (6, 2, 300.00),
(7, 3, 1250.00), (7, 4, 1250.00),
(8, 5, 450.00), (8, 6, 450.00),
(9, 7, 550.00), (9, 8, 550.00),
(10, 9, 425.00), (10, 10, 425.00);







